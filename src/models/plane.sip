/* ========
    Content from <noise/model/plane.h>
======== */

class Plane {
%Docstring "deindented"
    Model that defines the surface of a plane.
        
    This model returns an output value from a noise module given the coordinates of
    an input value located on the surface of an ( @a x, @a z ) plane.
        
    To generate an output value, pass the ( @a x, @a z ) coordinates of an input value
    to the get_value() method.
        
    This model is useful for creating:
    - two-dimensional textures
    - terrain height maps for local areas
        
    This plane extends infinitely in both directions.
%End

    %TypeHeaderCode
    #include <noise/model/plane.h>
    using namespace noise;
    using namespace noise::model;
    %End

    public:
        Plane();

        const Module& GetModule() const;

        void SetModule (const Module& module);

        double GetValue(double x, double z) const /PyName=get_value/;
        %Docstring "deindented"
            Returns the output value from the noise module given the ( @a x, @a z )
            coordinates of the specified input value located on the surface of the
            plane.

            @param x The @a x coordinate of the input value.
            @param z The @a z coordinate of the input value.

            @returns The output value from the noise module.

            This output value is generated by the noise module passed to the module
            property.
        %End

        // Make things a little more pythonic

        %Property(name=module, get=GetModule, set=SetModule) {
            %Docstring "deindented"
                The noise module that is used to generate the output values.

                This noise module must exist for the lifetime of this object, until
                you pass a new noise module to this method.
            %End
        };
};
